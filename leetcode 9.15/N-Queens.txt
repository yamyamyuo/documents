public class Solution {
    
    public boolean isValid(int []A, int r){
        for (int i=0;i<r;i++){
            if ( (A[i]==A[r])||(Math.abs(A[i]-A[r])==(r-i))){//斜率只有这一种哦
                return false;
            }
        }
        return true;
    }
    public void helper(int []A , int cur, int n, List<String []> res){
        if (cur==n) { 
            String [] tmp = new String[n];
            for (int i = 0; i < n; i++) {
                char [] item = new char[n];
                for (int j = 0 ; j < n; j++) {
                    item[j] = '.';
                }
                item[A[i]] = 'Q';
                tmp[i] = new String(item);
            }
            res.add(tmp);
            return;
        }
        else{
            for (int i=0;i<n;i++) {
                A[cur]=i;
                if (isValid(A,cur)) {
                    helper(A,cur+1,n,res);
                }
            }
        }
    }
    public List<String[]> solveNQueens(int n) {
        List<String[]> res = new ArrayList<String[]>();
        int []A = new int[n];
        helper(A,0,n,res);
        return res;
    }
}