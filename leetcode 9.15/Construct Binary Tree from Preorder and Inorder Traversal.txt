public class Solution {
	public TreeNode helper(int []preorder, int preBeg, int preEnd, int[] inorder, int inBeg, int inEnd) {
		if (preBeg > preEnd || inBeg > inEnd)
			return null;
		int root = preorder[preBeg];
		int index = 0;
		for (int i = 0; i < preorder.length; i++) {
			if (inorder[i] == root) {
				index = i;
				break;
			}
		}
		int len = index - inBeg;
		TreeNode parent = new TreeNode(root);
		parent.left = helper(preorder, preBeg + 1, preBeg+len, inorder, inBeg, inBeg + len - 1);
		parent.right = helper(preorder, preBeg + len + 1, preEnd, inorder, inBeg + len+1, inEnd);
		
		return parent;
	}
    public TreeNode buildTree(int[] preorder, int[] inorder) {
        if (preorder.length == 0) {
        	return null;
        }
        return helper(preorder,0,preorder.length-1,inorder,0,inorder.length-1);
    }
}