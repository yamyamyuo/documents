//寻找最小值的关键点，寻找突变的那一个点
//例如231，寻找从3变1的那个位置
public class Solution {
    public int findMin(int[] num) {
        
        int len = num.length;
        if (len == 1||num[0] < num[len-1])//去除压根没有rotated的情况
            return num[0];
        
        int left = 0;
        int right = num.length-1;
        while (left < right) {//不能有等于号
            int mid = left + (right - left)/2;
            if (mid-1>=0 && num[mid-1] > num[mid])
                return num[mid];
            if (mid+1< num.length && num[mid] > num[mid+1])
                return num[mid+1];
            if (num[mid] < num[right]) 
                right = mid-1;
            else if (num[left] < num[mid])
                left = mid+1;
            while (left < mid && num[left] == num[mid])
                left++;
            while (right > mid && num[right] == num[mid])
                right--;
           
       }
       return num[left];
    }
}