public class Solution {
	 public static ListNode deleteDuplicates(ListNode head) {
		 if (head == null || head.next == null)
			 return head;
		 ListNode p = head;
		 
		 ListNode dummy = new ListNode(0);
		 dummy.next = head;
		 
		 ListNode pre = dummy;
		 while (p!=null) {
			 if ((p.next!=null)&&(p.val == p.next.val)){
				 while ((p.next!=null)&&(p.val == p.next.val)) {
					 p.next = p.next.next;
				 }
				 if (p.next!=null) {
				    p.val = p.next.val;
				    p.next = p.next.next;
				 } else {
				    pre.next = p.next;
				    return dummy.next;
				 }
			 } else {
			 pre = p;
			 p = p.next;
			 }
		 }
		 return dummy.next;
     }
}

//方法二
public class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode cur = head;
        while (cur!=null&&cur.next!=null) {
            if (cur.val!= cur.next.val) {
                pre = pre.next;
                
            } else {
                while (cur.next!=null&& cur.val == cur.next.val) {
                    cur = cur.next;
                }
                pre.next = cur.next;
                
            }
            cur = cur.next;
        }
        return dummy.next;
    }
}